name: Workflow
on:
  push:
    branches: [ main ]
  pull_request: { }

jobs:
  validate-renovate-config:
    uses: BlindfoldedSurgery/renovate-config/.github/workflows/validate.yml@main

  tklint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sed -i 's/python.*//' .tool-versions
      - uses: asdf-vm/actions/install@v3
      - run: jb install
      - run: tk lint environments/default

  lint:
    uses: BlindfoldedSurgery/actions-python/.github/workflows/lint.yml@v1
    with:
      python-version: '3.12'

  test:
    uses: BlindfoldedSurgery/actions-python/.github/workflows/test.yml@v1
    with:
      python-version: '3.12'

  build-container-image:
    needs:
    - lint
    - test
    - tklint
    uses: BlindfoldedSurgery/actions-container/.github/workflows/build-image-docker.yml@v3
    with:
      push-image: ${{ github.ref_name == github.event.repository.default_branch }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-container-image
    if: success() && github.ref_name == github.event.repository.default_branch
    concurrency: production
    steps:
      - uses: actions/checkout@v4
      - run: sed -i 's/python.*//' .tool-versions
      - uses: asdf-vm/actions/install@v3
      - run: jb install
      - uses: rlespinasse/github-slug-action@v4
      - uses: BlindfoldedSurgery/actions-tanka@main
        env:
          IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}"
        with:
          subcommand: apply
          environment: default
          auto_approve: always
          ext_str: |
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
            IMAGE_NAME=${IMAGE_NAME}
            IMAGE_TAG=${GITHUB_SHA}
          kubeconfig: ${{ secrets.KUBECONFIG_RAW }}

  clean:
    concurrency: cleanup
    needs: deploy
    uses: BlindfoldedSurgery/actions-container/.github/workflows/clean.yml@v3
